# Generated by Django 4.2.1 on 2023-07-12 00:23

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150)),
                ('username', models.CharField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=100)),
                ('photo', models.ImageField(upload_to='image/')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, unique=True)),
                ('picture', models.ImageField(upload_to='user/about/')),
                ('info', models.TextField()),
                ('story', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_author', models.CharField(max_length=254)),
                ('post_sub', models.TextField(max_length=500)),
                ('post_img', models.ImageField(upload_to='admin/blog/img/')),
                ('post_desc', models.TextField()),
                ('post_date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GaleryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, null=True)),
                ('image', models.ImageField(upload_to='admin/restaurant_images/')),
            ],
        ),
        migrations.CreateModel(
            name='OrderAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(choices=[('first area', 'First Area'), ('second area', 'Second Area'), ('third area', 'Third Area'), ('fourth area', 'Fourth Area'), ('fifth area', 'Fifth Area'), ('sixth area', 'Sixth Area'), ('seventh area', 'Seventh Area'), ('eighth area', 'Eighth Area'), ('ninth area', 'Ninth Area'), ('tenth area', 'Tenth Area')], max_length=128)),
                ('street', models.CharField(max_length=256)),
                ('shop_home', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=320)),
                ('phone', models.CharField(max_length=13)),
                ('order_note', models.TextField()),
                ('current_address', models.BooleanField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_address', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_name', models.CharField(max_length=254, unique=True)),
                ('res_img', models.ImageField(upload_to='admin/blog/resources/img/')),
                ('res_info', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.PositiveIntegerField()),
                ('old_price', models.PositiveIntegerField(null=True)),
                ('category', models.CharField(choices=[('pizza', 'pizza'), ('beverage', 'beverage'), ('special juice', 'special juice'), ('sweets', 'sweets'), ('rice-biryani', 'rice-biryani'), ('fast-food', 'fast-food'), ('bar-be-coe', 'bar-be-coe'), ('salad', 'salad'), ('special-top', 'special-top'), ('afghani-special', 'afghani-special'), ('pakistani', 'pakistani'), ('chinese', 'chinese'), ('soup', 'soup'), ('fish', 'fish')], max_length=64)),
                ('info', models.TextField(max_length=500)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ProductPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo1', models.ImageField(upload_to='admin/product/img/')),
                ('photo2', models.ImageField(null=True, upload_to='admin/product/img/')),
                ('photo3', models.ImageField(null=True, upload_to='admin/product/img/')),
                ('photo4', models.ImageField(null=True, upload_to='admin/product/img/')),
                ('photo5', models.ImageField(null=True, upload_to='admin/product/img/')),
                ('photo6', models.ImageField(upload_to='admin/product/img/')),
                ('pro_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_photos', to='admin_site.product')),
            ],
        ),
        migrations.CreateModel(
            name='PostComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cust_name', models.CharField(max_length=164)),
                ('cust_img', models.ImageField(upload_to='admin/blog/comment/')),
                ('message', models.TextField()),
                ('postid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comment', to='admin_site.blogpost')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now=True)),
                ('shipping_cost', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('delivered', 'delivered'), ('undelivered', 'undelivered')], max_length=15)),
                ('subtotal', models.IntegerField()),
                ('addID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address_of_order', to='admin_site.orderaddress')),
                ('custID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cust_orders', to=settings.AUTH_USER_MODEL)),
                ('ordered_products', models.ManyToManyField(to='admin_site.product')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comnt_data', models.DateField(auto_now=True)),
                ('comment', models.TextField()),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_site.product')),
            ],
        ),
        migrations.AddField(
            model_name='blogpost',
            name='post_res',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_site.postresource'),
        ),
        migrations.CreateModel(
            name='AddToCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_site.product')),
            ],
            options={
                'unique_together': {('product', 'customer')},
            },
        ),
    ]
